using Microsoft.VisualStudio.TestTools.UnitTesting;
using RestSharp;
using System.Diagnostics;
using System.Net;


namespace SeleniumBase.Framework.Core.Services
{
    public class GenericAPICalls
    {


        public static IRestResponse GetAzureToken(string BaseUrl)
        {
            var client = new RestClient(BaseUrl);
            
            var request = new RestRequest(Method.GET);
            request.AddHeader("Content-Type", "application/x-www-form-urlencoded");

            var response = client.Get(request);
            Debug.WriteLine(response.Content.ToString());
            Assert.AreEqual(response.StatusCode, HttpStatusCode.OK);
            Assert.AreEqual(true, response.IsSuccessful);
            return response;

        }

        public static IRestResponse Get(string BaseUrl, string Token)
        {
            var client = new RestClient(BaseUrl);
            var request = new RestRequest(Method.GET);
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("Authorization", $"Bearer {Token}");
            var response = client.Get(request);
            Debug.WriteLine(response.Content.ToString());
            Assert.AreEqual(response.StatusCode, HttpStatusCode.OK);
            Assert.AreEqual(true, response.IsSuccessful);
            return response;

        }

        ///// <summary>
        ///// Post request using the RestSharp Api services
        ///// </summary>
        ///// <param name="Uri">URL used to connect to DevOps Server</param>
        ///// <param name="endPoint">Api call end point</param>
        ///// <param name="body">Body used in the json request</param>
        ///// <returns>Response generated by request</returns>
        //public static IRestResponse Post(string Uri, string endPoint, JObject body)
        //{
        //    var client = new RestClient(Uri);
        //    client.Authenticator = new HttpBasicAuthenticator("", "");
        //    var request = new RestRequest(endPoint, Method.POST);
        //    request.AddHeader("Content-Type", "application/json");
        //    request.AddParameter("application/json", body, ParameterType.RequestBody);
        //    var response = client.Post(request);

        //    Assert.AreEqual(response.StatusCode, HttpStatusCode.OK);
        //    Assert.AreEqual(true, response.IsSuccessful);
        //    return response;
        //}

        ///// <summary>
        ///// Get request using the RestSharp Api services
        ///// </summary>
        ///// <param name="Uri">URL used to connect to DevOps Server</param>
        ///// <param name="endPoint">Api call end point</param>
        ///// <param name="body">Body used in the json request</param>
        ///// <returns>Response generated by request</returns>
        //public static IRestResponse Get(string Uri, string endPoint, JObject body)
        //{
        //    var client = new RestClient(Uri);
        //    client.Authenticator = new HttpBasicAuthenticator("", );
        //    var request = new RestRequest(endPoint, Method.GET);
        //    request.AddParameter("application/json", body);
        //    var response = client.Get(request);
        //    Assert.AreEqual(response.StatusCode, HttpStatusCode.OK);
        //    Assert.AreEqual(true, response.IsSuccessful);
        //    return response;
        //}

        ///// <summary>
        ///// Put request using the RestSharp Api services
        ///// </summary>
        ///// <param name="Uri">URL used to connect to DevOps Server</param>
        ///// <param name="endPoint">Api call end point</param>
        ///// <param name="body">Body used in the json request</param>
        ///// <returns>Response generated by request</returns>
        //public static IRestResponse Put(string Uri, string endPoint, JObject body)
        //{
        //    var client = new RestClient(Uri);
        //    client.Authenticator = new HttpBasicAuthenticator("", );
        //    var request = new RestRequest(endPoint, Method.PUT);
        //    Debug.WriteLine(body.ToString());
        //    request.AddHeader("Content-Type", "application/json");
        //    request.AddParameter("application/json", body);
        //    var response = client.Put(request);

        //    Assert.AreEqual(true, response.IsSuccessful);
        //    Assert.AreEqual(response.StatusCode, HttpStatusCode.OK);
        //    return response;
        //}

        ///// <summary>
        ///// Patch request using the RestSharp Api services
        ///// </summary>
        ///// <param name="Uri">URL used to connect to DevOps Server</param>
        ///// <param name="endPoint">Api call end point</param>
        ///// <param name="body">Body used in the json request</param>
        ///// <returns>Response generated by request</returns>
        //public static IRestResponse Patch(string Uri, string endPoint, JObject body)
        //{
        //    var client = new RestClient(Uri);
        //    client.Authenticator = new ;
        //    var request = new RestRequest(endPoint, Method.PATCH);
        //    Debug.WriteLine(body.ToString());
        //    request.AddHeader("Content-Type", "application/json");
        //    request.AddParameter("application/json", body, ParameterType.RequestBody);
        //    var response = client.Patch(request);

        //    Assert.AreEqual(response.StatusCode, HttpStatusCode.OK);
        //    Assert.AreEqual(true, response.IsSuccessful);
        //    return response;
        //}

        ///// <summary>
        ///// Delete request using the RestSharp Api services
        ///// </summary>
        ///// <param name="Uri">URL used to connect to DevOps Server</param>
        ///// <param name="endPoint">Api call end point</param>
        ///// <returns>Response generated by request</returns>
        //public static IRestResponse Delete(string Uri, string endPoint)
        //{
        //    var client = new RestClient(Uri);
        //    client.Authenticator = new HttpBasicAuthenticator("", );
        //    var request = new RestRequest(endPoint, Method.DELETE);
        //    var response = client.Delete(request);

        //    Assert.AreEqual(response.StatusCode, HttpStatusCode.NoContent);
        //    Assert.AreEqual(true, response.IsSuccessful);
        //    return response;
        //}
    }
}
